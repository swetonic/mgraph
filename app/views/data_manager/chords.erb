<!DOCTYPE html>
<meta charset="utf-8">

<!--<script src="http://d3js.org/d3.v2.js?2.9.1"></script>-->

<%= javascript_include_tag 'ext-js/ext-all.js', 'd3.v2.js', 'd3-packages', 'jquery.min' %>

<style>

.node {
  font: 12px sans-serif;
}

.link {
  stroke: steelblue;
  stroke-opacity: .4;
  fill: none;
}

</style>
<body>
  <div id="controls" style="font-size:14px; padding: 10px 10px 10px 10px;">
    <div id="info">
    </div>

  </div>

<script>
$(document).ready(function() {

    var diameter = 720,
        radius = diameter / 2,
        innerRadius = radius - 120;
    
    var cluster = d3.layout.cluster()
        .size([360, innerRadius])
        .sort(null)
        .value(function(d) { return d.size; });
    
    var bundle = d3.layout.bundle();
    
    var line = d3.svg.line.radial()
        .interpolate("bundle")
        .tension(.85)
        .radius(function(d) { return d.y; })
        .angle(function(d) { return d.x / 180 * Math.PI; });
    
    var svg = d3.select("body").append("svg")
        .attr("width", diameter)
        .attr("height", diameter)
      .append("g")
        .attr("transform", "translate(" + radius + "," + radius + ")");
    
    $.ajax("/data_manager/chords_json?root=<%=@root%>", { 
        beforeSend: function(jqXHR, settings) {
            $('#loader').show();
        },
        success: function(classes, textStatus, jqXHR) {
            $('#loader').hide();
        
          var nodes = cluster(packages.root(classes)),
              links = packages.imports(nodes);
        
          svg.selectAll(".link")
              .data(bundle(links))
            .enter().append("path")
              .attr("class", "link")
              .attr("d", line);
        
          svg.selectAll(".node")
              .data(nodes.filter(function(n) { return !n.children; }))
            .enter().append("g")
              .attr("class", "node")
              .attr("transform", function(d) { return "rotate(" + (d.x - 90) + ")translate(" + d.y + ")"; })
            .append("text")
              .attr("dx", function(d) { return d.x < 180 ? 8 : -8; })
              .attr("dy", ".31em")
              .attr("text-anchor", function(d) { return d.x < 180 ? "start" : "end"; })
              .attr("transform", function(d) { return d.x < 180 ? null : "rotate(180)"; })
              .text(function(d) { return d.data.key; });
        }
    });
    d3.select(self.frameElement).style("height", diameter + "px");
});

</script>

